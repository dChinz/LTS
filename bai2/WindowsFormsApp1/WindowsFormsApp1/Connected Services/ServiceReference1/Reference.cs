//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Phong", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class Phong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string maphField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sdtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tenphField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string maph {
            get {
                return this.maphField;
            }
            set {
                if ((object.ReferenceEquals(this.maphField, value) != true)) {
                    this.maphField = value;
                    this.RaisePropertyChanged("maph");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sdt {
            get {
                return this.sdtField;
            }
            set {
                if ((object.ReferenceEquals(this.sdtField, value) != true)) {
                    this.sdtField = value;
                    this.RaisePropertyChanged("sdt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tenph {
            get {
                return this.tenphField;
            }
            set {
                if ((object.ReferenceEquals(this.tenphField, value) != true)) {
                    this.tenphField = value;
                    this.RaisePropertyChanged("tenph");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chucvu", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class Chucvu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string macvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tencvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double tientcField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string macv {
            get {
                return this.macvField;
            }
            set {
                if ((object.ReferenceEquals(this.macvField, value) != true)) {
                    this.macvField = value;
                    this.RaisePropertyChanged("macv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tencv {
            get {
                return this.tencvField;
            }
            set {
                if ((object.ReferenceEquals(this.tencvField, value) != true)) {
                    this.tencvField = value;
                    this.RaisePropertyChanged("tencv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double tientc {
            get {
                return this.tientcField;
            }
            set {
                if ((this.tientcField.Equals(value) != true)) {
                    this.tientcField = value;
                    this.RaisePropertyChanged("tientc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NhanVien", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class NhanVien : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double luongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string macvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string manvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string maphField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ngaysinhField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tennvField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double luong {
            get {
                return this.luongField;
            }
            set {
                if ((this.luongField.Equals(value) != true)) {
                    this.luongField = value;
                    this.RaisePropertyChanged("luong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string macv {
            get {
                return this.macvField;
            }
            set {
                if ((object.ReferenceEquals(this.macvField, value) != true)) {
                    this.macvField = value;
                    this.RaisePropertyChanged("macv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string manv {
            get {
                return this.manvField;
            }
            set {
                if ((object.ReferenceEquals(this.manvField, value) != true)) {
                    this.manvField = value;
                    this.RaisePropertyChanged("manv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string maph {
            get {
                return this.maphField;
            }
            set {
                if ((object.ReferenceEquals(this.maphField, value) != true)) {
                    this.maphField = value;
                    this.RaisePropertyChanged("maph");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ngaysinh {
            get {
                return this.ngaysinhField;
            }
            set {
                if ((this.ngaysinhField.Equals(value) != true)) {
                    this.ngaysinhField = value;
                    this.RaisePropertyChanged("ngaysinh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tennv {
            get {
                return this.tennvField;
            }
            set {
                if ((object.ReferenceEquals(this.tennvField, value) != true)) {
                    this.tennvField = value;
                    this.RaisePropertyChanged("tennv");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportData", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class ReportData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hotenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double luongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string manvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tencvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tenphField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hoten {
            get {
                return this.hotenField;
            }
            set {
                if ((object.ReferenceEquals(this.hotenField, value) != true)) {
                    this.hotenField = value;
                    this.RaisePropertyChanged("hoten");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double luong {
            get {
                return this.luongField;
            }
            set {
                if ((this.luongField.Equals(value) != true)) {
                    this.luongField = value;
                    this.RaisePropertyChanged("luong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string manv {
            get {
                return this.manvField;
            }
            set {
                if ((object.ReferenceEquals(this.manvField, value) != true)) {
                    this.manvField = value;
                    this.RaisePropertyChanged("manv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tencv {
            get {
                return this.tencvField;
            }
            set {
                if ((object.ReferenceEquals(this.tencvField, value) != true)) {
                    this.tencvField = value;
                    this.RaisePropertyChanged("tencv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tenph {
            get {
                return this.tenphField;
            }
            set {
                if ((object.ReferenceEquals(this.tenphField, value) != true)) {
                    this.tenphField = value;
                    this.RaisePropertyChanged("tenph");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Load_Ph", ReplyAction="http://tempuri.org/IService1/Load_PhResponse")]
        WindowsFormsApp1.ServiceReference1.Phong[] Load_Ph();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Load_Ph", ReplyAction="http://tempuri.org/IService1/Load_PhResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.Phong[]> Load_PhAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insert_ph", ReplyAction="http://tempuri.org/IService1/Insert_phResponse")]
        void Insert_ph(WindowsFormsApp1.ServiceReference1.Phong phong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insert_ph", ReplyAction="http://tempuri.org/IService1/Insert_phResponse")]
        System.Threading.Tasks.Task Insert_phAsync(WindowsFormsApp1.ServiceReference1.Phong phong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_ph", ReplyAction="http://tempuri.org/IService1/Update_phResponse")]
        void Update_ph(WindowsFormsApp1.ServiceReference1.Phong phong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_ph", ReplyAction="http://tempuri.org/IService1/Update_phResponse")]
        System.Threading.Tasks.Task Update_phAsync(WindowsFormsApp1.ServiceReference1.Phong phong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_ph", ReplyAction="http://tempuri.org/IService1/Delete_phResponse")]
        void Delete_ph(WindowsFormsApp1.ServiceReference1.Phong phong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_ph", ReplyAction="http://tempuri.org/IService1/Delete_phResponse")]
        System.Threading.Tasks.Task Delete_phAsync(WindowsFormsApp1.ServiceReference1.Phong phong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Load_cv", ReplyAction="http://tempuri.org/IService1/Load_cvResponse")]
        WindowsFormsApp1.ServiceReference1.Chucvu[] Load_cv();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Load_cv", ReplyAction="http://tempuri.org/IService1/Load_cvResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.Chucvu[]> Load_cvAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insert_cv", ReplyAction="http://tempuri.org/IService1/Insert_cvResponse")]
        void Insert_cv(WindowsFormsApp1.ServiceReference1.Chucvu chucvu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insert_cv", ReplyAction="http://tempuri.org/IService1/Insert_cvResponse")]
        System.Threading.Tasks.Task Insert_cvAsync(WindowsFormsApp1.ServiceReference1.Chucvu chucvu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_cv", ReplyAction="http://tempuri.org/IService1/Update_cvResponse")]
        void Update_cv(WindowsFormsApp1.ServiceReference1.Chucvu chucvu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_cv", ReplyAction="http://tempuri.org/IService1/Update_cvResponse")]
        System.Threading.Tasks.Task Update_cvAsync(WindowsFormsApp1.ServiceReference1.Chucvu chucvu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_cv", ReplyAction="http://tempuri.org/IService1/Delete_cvResponse")]
        void Delete_cv(WindowsFormsApp1.ServiceReference1.Chucvu chucvu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_cv", ReplyAction="http://tempuri.org/IService1/Delete_cvResponse")]
        System.Threading.Tasks.Task Delete_cvAsync(WindowsFormsApp1.ServiceReference1.Chucvu chucvu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Load_nv", ReplyAction="http://tempuri.org/IService1/Load_nvResponse")]
        WindowsFormsApp1.ServiceReference1.NhanVien[] Load_nv();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Load_nv", ReplyAction="http://tempuri.org/IService1/Load_nvResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.NhanVien[]> Load_nvAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insert", ReplyAction="http://tempuri.org/IService1/InsertResponse")]
        void Insert(WindowsFormsApp1.ServiceReference1.NhanVien chu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Insert", ReplyAction="http://tempuri.org/IService1/InsertResponse")]
        System.Threading.Tasks.Task InsertAsync(WindowsFormsApp1.ServiceReference1.NhanVien chu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update", ReplyAction="http://tempuri.org/IService1/UpdateResponse")]
        void Update(WindowsFormsApp1.ServiceReference1.NhanVien chu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update", ReplyAction="http://tempuri.org/IService1/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(WindowsFormsApp1.ServiceReference1.NhanVien chu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete", ReplyAction="http://tempuri.org/IService1/DeleteResponse")]
        void Delete(WindowsFormsApp1.ServiceReference1.NhanVien chu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete", ReplyAction="http://tempuri.org/IService1/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(WindowsFormsApp1.ServiceReference1.NhanVien chu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Load_report", ReplyAction="http://tempuri.org/IService1/Load_reportResponse")]
        WindowsFormsApp1.ServiceReference1.ReportData[] Load_report();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Load_report", ReplyAction="http://tempuri.org/IService1/Load_reportResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.ReportData[]> Load_reportAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsFormsApp1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsFormsApp1.ServiceReference1.IService1>, WindowsFormsApp1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WindowsFormsApp1.ServiceReference1.Phong[] Load_Ph() {
            return base.Channel.Load_Ph();
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.Phong[]> Load_PhAsync() {
            return base.Channel.Load_PhAsync();
        }
        
        public void Insert_ph(WindowsFormsApp1.ServiceReference1.Phong phong) {
            base.Channel.Insert_ph(phong);
        }
        
        public System.Threading.Tasks.Task Insert_phAsync(WindowsFormsApp1.ServiceReference1.Phong phong) {
            return base.Channel.Insert_phAsync(phong);
        }
        
        public void Update_ph(WindowsFormsApp1.ServiceReference1.Phong phong) {
            base.Channel.Update_ph(phong);
        }
        
        public System.Threading.Tasks.Task Update_phAsync(WindowsFormsApp1.ServiceReference1.Phong phong) {
            return base.Channel.Update_phAsync(phong);
        }
        
        public void Delete_ph(WindowsFormsApp1.ServiceReference1.Phong phong) {
            base.Channel.Delete_ph(phong);
        }
        
        public System.Threading.Tasks.Task Delete_phAsync(WindowsFormsApp1.ServiceReference1.Phong phong) {
            return base.Channel.Delete_phAsync(phong);
        }
        
        public WindowsFormsApp1.ServiceReference1.Chucvu[] Load_cv() {
            return base.Channel.Load_cv();
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.Chucvu[]> Load_cvAsync() {
            return base.Channel.Load_cvAsync();
        }
        
        public void Insert_cv(WindowsFormsApp1.ServiceReference1.Chucvu chucvu) {
            base.Channel.Insert_cv(chucvu);
        }
        
        public System.Threading.Tasks.Task Insert_cvAsync(WindowsFormsApp1.ServiceReference1.Chucvu chucvu) {
            return base.Channel.Insert_cvAsync(chucvu);
        }
        
        public void Update_cv(WindowsFormsApp1.ServiceReference1.Chucvu chucvu) {
            base.Channel.Update_cv(chucvu);
        }
        
        public System.Threading.Tasks.Task Update_cvAsync(WindowsFormsApp1.ServiceReference1.Chucvu chucvu) {
            return base.Channel.Update_cvAsync(chucvu);
        }
        
        public void Delete_cv(WindowsFormsApp1.ServiceReference1.Chucvu chucvu) {
            base.Channel.Delete_cv(chucvu);
        }
        
        public System.Threading.Tasks.Task Delete_cvAsync(WindowsFormsApp1.ServiceReference1.Chucvu chucvu) {
            return base.Channel.Delete_cvAsync(chucvu);
        }
        
        public WindowsFormsApp1.ServiceReference1.NhanVien[] Load_nv() {
            return base.Channel.Load_nv();
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.NhanVien[]> Load_nvAsync() {
            return base.Channel.Load_nvAsync();
        }
        
        public void Insert(WindowsFormsApp1.ServiceReference1.NhanVien chu) {
            base.Channel.Insert(chu);
        }
        
        public System.Threading.Tasks.Task InsertAsync(WindowsFormsApp1.ServiceReference1.NhanVien chu) {
            return base.Channel.InsertAsync(chu);
        }
        
        public void Update(WindowsFormsApp1.ServiceReference1.NhanVien chu) {
            base.Channel.Update(chu);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(WindowsFormsApp1.ServiceReference1.NhanVien chu) {
            return base.Channel.UpdateAsync(chu);
        }
        
        public void Delete(WindowsFormsApp1.ServiceReference1.NhanVien chu) {
            base.Channel.Delete(chu);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(WindowsFormsApp1.ServiceReference1.NhanVien chu) {
            return base.Channel.DeleteAsync(chu);
        }
        
        public WindowsFormsApp1.ServiceReference1.ReportData[] Load_report() {
            return base.Channel.Load_report();
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference1.ReportData[]> Load_reportAsync() {
            return base.Channel.Load_reportAsync();
        }
    }
}
